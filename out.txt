('int', '', 266)
('ID', 'factorial', 256)
('SEP', '(', 303)
('int', '', 266)
('ID', 'n', 256)
('SEP', ')', 304)
('SEP', '{', 299)
('if', '', 293)
('SEP', '(', 303)
('ID', 'n', 256)
('OP', '<=', 315)
('INT', 1, 346)
('SEP', ')', 304)
('SEP', '{', 299)
('return', '', 278)
('INT', 1, 346)
('SEP', ';', 307)
('SEP', '}', 300)
('else', '', 269)
('SEP', '{', 299)
('return', '', 278)
('ID', 'n', 256)
('OP', '*', 339)
('ID', 'factorial', 256)
('SEP', '(', 303)
('ID', 'n', 256)
('OP', '-', 333)
('INT', 1, 346)
('SEP', ')', 304)
('SEP', ';', 307)
('SEP', '}', 300)
('SEP', '}', 300)
('int', '', 266)
('ID', 'main', 256)
('SEP', '(', 303)
('SEP', ')', 304)
('SEP', '{', 299)
('int', '', 266)
('ID', 'a', 256)
('OP', '=', 318)
('INT', 5, 346)
('SEP', ';', 307)
('int', '', 266)
('ID', 'b', 256)
('OP', '=', 318)
('INT', 10, 346)
('SEP', ';', 307)
('int', '', 266)
('ID', 'result', 256)
('OP', '=', 318)
('INT', 0, 346)
('SEP', ';', 307)
('ID', 'char', 256)
('ID', 'grade', 256)
('OP', '=', 318)
('CHAR_LITERAL', 'A', 276)
('SEP', ';', 307)
('if', '', 293)
('SEP', '(', 303)
('ID', 'a', 256)
('OP', '>', 316)
('ID', 'b', 256)
('SEP', ')', 304)
('SEP', '{', 299)
('ID', 'result', 256)
('OP', '=', 318)
('ID', 'a', 256)
('OP', '+', 330)
('ID', 'b', 256)
('SEP', ';', 307)
('SEP', '}', 300)
('else', '', 269)
('if', '', 293)
('SEP', '(', 303)
('ID', 'a', 256)
('OP', '==', 319)
('ID', 'b', 256)
('SEP', ')', 304)
('SEP', '{', 299)
('ID', 'result', 256)
('OP', '=', 318)
('ID', 'a', 256)
('OP', '*', 339)
('ID', 'b', 256)
('SEP', ';', 307)
('SEP', '}', 300)
('else', '', 269)
('SEP', '{', 299)
('ID', 'result', 256)
('OP', '=', 318)
('ID', 'b', 256)
('OP', '-', 333)
('ID', 'a', 256)
('SEP', ';', 307)
('SEP', '}', 300)
('ID', 'printf', 256)
('SEP', '(', 303)
('STRING_LITERAL', 'The result is: %d\\n', 351)
('SEP', ',', 306)
('ID', 'result', 256)
('SEP', ')', 304)
('SEP', ';', 307)
('int', '', 266)
('ID', 'i', 256)
('OP', '=', 318)
('INT', 0, 346)
('SEP', ';', 307)
('while', '', 294)
('SEP', '(', 303)
('ID', 'i', 256)
('OP', '<', 314)
('INT', 5, 346)
('SEP', ')', 304)
('SEP', '{', 299)
('ID', 'result', 256)
('OP', '+=', 332)
('ID', 'i', 256)
('SEP', ';', 307)
('ID', 'i', 256)
('OP', '++', 331)
('SEP', ';', 307)
('SEP', '}', 300)
('ID', 'printf', 256)
('SEP', '(', 303)
('STRING_LITERAL', 'Factorial of %d is %d\\n', 351)
('SEP', ',', 306)
('ID', 'a', 256)
('SEP', ',', 306)
('ID', 'factorial', 256)
('SEP', '(', 303)
('ID', 'a', 256)
('SEP', ')', 304)
('SEP', ')', 304)
('SEP', ';', 307)
('if', '', 293)
('SEP', '(', 303)
('ID', 'grade', 256)
('OP', '==', 319)
('CHAR_LITERAL', 'A', 276)
('OP', '||', 321)
('ID', 'grade', 256)
('OP', '==', 319)
('CHAR_LITERAL', 'B', 276)
('SEP', ')', 304)
('SEP', '{', 299)
('ID', 'printf', 256)
('SEP', '(', 303)
('STRING_LITERAL', 'Excellent!\\n', 351)
('SEP', ')', 304)
('SEP', ';', 307)
('SEP', '}', 300)
('else', '', 269)
('SEP', '{', 299)
('ID', 'printf', 256)
('SEP', '(', 303)
('STRING_LITERAL', 'Keep trying.\\n', 351)
('SEP', ')', 304)
('SEP', ';', 307)
('SEP', '}', 300)
('return', '', 278)
('INT', 0, 346)
('SEP', ';', 307)
('SEP', '}', 300)
